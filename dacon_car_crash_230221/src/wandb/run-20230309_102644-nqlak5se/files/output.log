
  0%|                                                                                                                                                             | 0/65 [00:02<?, ?it/s]
Traceback (most recent call last):
  File "/data/home/ubuntu/workspace/dacon/src/weather_train.py", line 232, in <module>
    infer_model = train(model,
  File "/data/home/ubuntu/workspace/dacon/src/weather_train.py", line 105, in train
    output = model(videos)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torchvision/models/resnet.py", line 285, in forward
    return self._forward_impl(x)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torchvision/models/resnet.py", line 275, in _forward_impl
    x = self.layer3(x)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/modules/container.py", line 139, in forward
    input = module(input)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torchvision/models/resnet.py", line 155, in forward
    out = self.bn3(out)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/modules/batchnorm.py", line 168, in forward
    return F.batch_norm(
  File "/data/home/ubuntu/anaconda3/envs/pytorch_p39/lib/python3.9/site-packages/torch/nn/functional.py", line 2438, in batch_norm
    return torch.batch_norm(
RuntimeError: CUDA out of memory. Tried to allocate 98.00 MiB (GPU 0; 15.78 GiB total capacity; 14.06 GiB already allocated; 42.19 MiB free; 14.60 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF